// ftp 自动上传
const FtpDeploy = require('ftp-deploy');
const ftpServ = new FtpDeploy();

let config = {
  user: 'xxx', // 用户名
  password: 'xxxx', // 密码
  host: 'xxxx', // ftp 主机地址
  port: 21, // 端口
  localRoot: './dist', // 打包文件相对于项目根目录位置
  assets: 'assets', //静态资源文件夹名称
  remoteRoot: '/', // 远程资源路径 格式:"/public_html/"
  include: ['*', '**/*'], // 包含文件
  // exclude: ['dist/**/*.map'], // 排除文件
  gc: true, //上传前是否删除静态资源文件夹下内容(assets配置)
  forcePasv: false, // 主动模式/被动模式
  sftp: false // sftp
};

function ftp(config) {
  return new Promise((resolve, reject) => {
    ftpServ
      .deploy(config)
      .then(res => {
        // 上传成功
        resolve(res);
        return false;
      })
      .catch(err => {
        // 上传失败

        console.log(err);
        console.log('项目发布失败');
        return false;
      });
  });
}

async function deploy(config) {
  // 清理静态资源文件
  if (config.gc) {
    console.log(`开始删除 ${config.remoteRoot + config.assets} 文件夹下内容`);
    await ftp({
      user: config.user, // 用户名
      password: config.password, // 密码
      host: config.host, // ftp 主机地址
      port: config.port, // 端口
      localRoot: config.localRoot, // 打包文件相对于项目根目录位置
      remoteRoot: config.remoteRoot + config.assets, // 远程资源路径
      include: [''], // 包含文件(不上传任何文件)
      deleteRemote: true, // （慎用)上传前是否删除, 如果为true，则在上传之前删除目标中的所有现有文件
      forcePasv: config.forcePasv, // 主动模式/被动模式
      sftp: config.sftp // sftp
    });
    console.log(`删除 ${config.remoteRoot + config.assets} 文件夹下内容成功`);
  }

  // 上传文件
  console.log('开始上传');
  let upload = await ftp({
    user: config.user, // 用户名
    password: config.password, // 密码
    host: config.host, // ftp 主机地址
    port: config.port, // 端口
    localRoot: config.localRoot, // 打包文件相对于项目根目录位置
    remoteRoot: config.remoteRoot, // 远程资源路径
    include: config.include, // 包含文件
    exclude: config.exclude, //要排除的文件
    deleteRemote: false, // （慎用)上传前是否删除, 如果为true，则在上传之前删除目标中的所有现有文件
    forcePasv: config.forcePasv, // 主动模式/被动模式
    sftp: config.sftp // sftp
  });
  console.log('完成:', upload);
  console.log('上传成功');
}

deploy(config);
